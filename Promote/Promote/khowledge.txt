1. 只有使用闭包方式创建出的对象才只会创建一次 ，如：

var autoLoginLab: UILabel = {
    let lab = UILabel()
    return lab
}()

而 var autoLoginLab: UILabel {
    let lab = UILabel()
    return lab
}   则每次调用都会重新创建一次


2. iPhone X 尺寸：
#define IS_IPHONE_X (Screen_Height == 812.0f) ? YES : NO

1.导航栏高度 88 非非IPoneX手机为64
2.状态栏高度44 非IPoneX手机为20
3.tabar高度83 非IPhoneX手机为49  如下图所示；

3. setValue:forKey 与value:forKey 必须配对后使用


3. setValue:forKey 与value:forKey 必须配对后使用

4. 控制器a通过 在touchesBegan时present 出 控制器b, 则在b控制器里点击页面的话还是会对于控制器a的touchesBegan方法的（前提是b为实现touchesBegan方法），这是事件传递，即事件由屏幕离用户最近的地方网远处传，和寻找响应者正好相反。即若控制器a实现了touchesBegan方法，则，点击b页面时，不会再出发控制器a的touchesBegan方法
5. OS X Server搭建Bots持续集成环境
6. 控制器a push或present出控制器b，a都不会被释放，除非rootViewcontroller由1变为1‘。

7. Rxswift： Map 与 FlatMap，merge()， 参考： https://www.cnblogs.com/scott-mr/p/7234769.html#5

8. opaque也是表示当前的UIView的不透明度，设置是否之后对于UIView的显示并没有什么影响,官方文档的意思简单点说就是opaque默认为YES，如果alpha小于1，那么应该设置opaque设置为NO.  alpha 的开销比hidden大，所以，隐藏，用hidden即可。
9. UIImageView是专门为显示图片做的控件，用了最优显示技术，所以不让调用darwrect方法。所以我们如果写了一个UIImageView的子类里面重写了drawRect方法是不会被调用的. 因为UIImageView的drawRect方法永远不会调（即使是外部主动setNeedsDisplay也没用），所以，获取不到上下文，故此时需要自行创建
